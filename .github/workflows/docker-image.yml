name: Build and Deploy Docker Image

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build Docker image
        run: |
          docker build -t my-app:${{ github.sha }} .

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image
        run: |
          docker tag my-app:${{ github.sha }} millicent25/my-app:${{ github.sha }}
          docker push millicent25/my-app:${{ github.sha }}

  create_ec2:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Configure AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2  # Change to your preferred region

      - name: Create EC2 Instance
        id: create_instance
        run: |
          INSTANCE_ID=$(aws ec2 run-instances \
            --image-id ami-05134c8ef96964280 \
            --instance-type t2.micro \
            --subnet-id subnet-050eb413d2b23b535 \
            --count 1 \
            --key-name "jenkinskey" \
            --security-group-ids sg-0f3ce752320980e9c \
            --query "Instances[0].InstanceId" \
            --output text)
          echo "INSTANCE_ID=$INSTANCE_ID" >> $GITHUB_ENV
      
          # Wait for the instance to be running
          aws ec2 wait instance-running --instance-ids $INSTANCE_ID
      
          # Get the public DNS name of the instance
          PUBLIC_DNS=$(aws ec2 describe-instances \
            --instance-ids $INSTANCE_ID \
            --query 'Reservations[0].Instances[0].PublicDnsName' \
            --output text)
          echo "EC2_HOST=$PUBLIC_DNS" >> $GITHUB_ENV


                        


  deploy:
    runs-on: ubuntu-latest
    needs: create_ec2

    steps:
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ env.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            sudo apt update -y
            sudo apt install apt-transport-https ca-certificates curl software-properties-common
            curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
            sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
            sudo apt update -y
            sudo apt install docker-ce
            sudo systemctl start docker
            sudo systemctl enable docker
            sudo usermod -aG docker $USER
            sudo docker pull millicent25/my-app:${{ github.sha }}
            sudo docker stop my-app || true
            sudo docker rm my-app || true
            sudo docker run -d --name my-app -p 80:80 millicent25/my-app:${{ github.sha }}
